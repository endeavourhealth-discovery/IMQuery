Objectives
- To run the entire process of two way mapping (between Profile Definition and UI) from a series of files (the interpolation / sentence generation logic does not change):
1. Vocabulary.json (templates + return phrases for functions), 2. functions.JS, 2. Ontology.json (extract of JSON document required by queryBuilder)
- Templates should come to life in the UI -> The end goal is Readability + User friendliness + User's understanding of what is going on + Easy mutation of the least number of placeholders




[Include] [a] [Person] if [they]:

	had [a] [Health Record] with:
				a [clinical Code] [that is] a part of the list of codes in the values set: [either SMI
																							or 	SMI Unresolved]
		and   	the [latest] [entry] had 
					[a] [clinical Code] [that is] a part of the list of codes in the values set: [SMI Unresolved]


		had [a] [Health Record] with:
					a [clinical Code] [that is] a part of the list of codes in the values set: [Systolic Arterial Pressure]
			and   	a [date] [that is] [less than] 18 months [before] [the reference date]
			and   	a [latest] [entry] had 
						[a] [clinical Code] [that is] a part of the list of codes in the values set: [Systolic Arterial Pressure]
						and [a] [value] [that is] [greater than] [140]


[and]	had [a] [health record] where
			the [Clinical Code] [is] part of the collection of codes in* [either SMI
																			or 	SMI Resolved]
			and the [Latest] [entry] had 
					[a] [clinical code] [that is] part of the collection of codes in [SMI]
				and 	[a] [value] [greater than] [140]

* alternative: "a part of the list of codes in", "part of the list of codes in the values set:"

[and]	had [a] [Health Record] with:
				a [clinical Code] [that is] a part of the list of codes in the values set: [Systolic Arterial Pressure]
		and   	a [date] is [less than] 18 months [before*] [the reference date]
		and   	a [Latest] 3 [entries] had 
					[a] [clinical Code] [that is] a part of the list of codes in the values set: [SMI]
					and [a] [value] [that is] [greater than] [140]

* if the value is negative its "before", positive its "after"



they 
			had a health record where the clinical code can be found in [either A or  B or ...]*
	and 	the most entry had a clinical code that that can be found in [A]

* if there are only two values in the valueIn array



Include if they:
	had [a thing] with
		a [code / value /date] of 
		and latest X entries had 
			a [code/value/date] of

* if there is one value


rdfs:label: "Active diagnosis without resolution"

they
	had an active diagnosis of: [SMI]
	without: [SMI Resolution]

[ ] = Concept set 

// In this example the template points to im:Event - the template just displays it in a more understandable way for the user.



!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
Problems to solve
[ ] CREATE SETTERS / GETTERS for placeholders



[ ] there are muttable (map to user input) /immutable (autogenerated from vocabulary) placeholders - e.g. concept sets [valueIn] vs pronoun / indefinite article / other phrases  
[ ] instead of defining your phrase if True in your template you can define this in a "Vocabulary" with rules and words (DRY = do not repeat yourself)



Phrase types:
vocabulary [static e.g. "where", "if", "the", and dynamic e.g. indeifnite article]
phrase (conditional text)
variable (pointing to path) 
template (i.e. child/parent templates)



todo

change phraseIfTrue / jsonIf true into "returnIfTrue":
-  {{pathToIri:...raw path...}}  = a path pointing to the string to interpolate 
	alternatives: pathToIri / pathToValue / variable  / phrase
- "Exclude" = literal text to interpolate